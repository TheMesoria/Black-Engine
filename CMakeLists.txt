CMAKE_MINIMUM_REQUIRED( VERSION 3.9 )
SET( CMAKE_CXX_STANDARD 17 )
INCLUDE( ExternalProject )

PROJECT( Black-Engine )
ENABLE_TESTING()

INCLUDE_DIRECTORIES( huntsman/include )

IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
	MESSAGE( "-- 64 bit compiler detected" )
	SET( EX_PLATFORM 64 )
	SET( EX_PLATFORM_NAME "x64" )
ELSE( CMAKE_SIZEOF_VOID_P EQUAL 8 )
	MESSAGE( "32 bits compiler detected" )
	SET( EX_PLATFORM 32 )
	SET( EX_PLATFORM_NAME "x86" )
ENDIF( CMAKE_SIZEOF_VOID_P EQUAL 8 )

SET( ERROR_FLAGS "-Wall -Werror -Wextra -Wfatal-errors -pedantic-errors" )

CONFIGURE_FILE( config/settings.json config/settings.json )
CONFIGURE_FILE( config/CmakeVariables.h.in ${CMAKE_CURRENT_SOURCE_DIR}/huntsman/include/global/CMakeVariables.hpp )
FILE(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/logs)

SET( SFML_INSTALL_LOCATION ${CMAKE_BINARY_DIR}/sfml )
SET( SPDLOG_INSTALL_LOCATION ${CMAKE_BINARY_DIR}/spdlog )
SET( JSON_INSTALL_LOCATION ${CMAKE_BINARY_DIR}/json )

EXTERNALPROJECT_ADD( SFML
					 GIT_REPOSITORY https://github.com/SFML/SFML
					 CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${SFML_INSTALL_LOCATION}
					 GIT_SHALLOW TRUE
					 UPDATE_DISCONNECTED TRUE
					 )
EXTERNALPROJECT_ADD( SPDLOG
					 GIT_REPOSITORY https://github.com/gabime/spdlog
					 CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${SPDLOG_INSTALL_LOCATION}
					 GIT_SHALLOW TRUE
					 UPDATE_DISCONNECTED TRUE
					 )
EXTERNALPROJECT_ADD( JSON
					 GIT_REPOSITORY https://github.com/nlohmann/json
					 CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${JSON_INSTALL_LOCATION}
					 GIT_SHALLOW TRUE
					 UPDATE_DISCONNECTED TRUE
					 )

INCLUDE_DIRECTORIES( ${SFML_INSTALL_LOCATION}/include )
LINK_DIRECTORIES( ${SFML_INSTALL_LOCATION}/lib )

INCLUDE_DIRECTORIES( ${SPDLOG_INSTALL_LOCATION}/include )
LINK_DIRECTORIES( ${SPDLOG_INSTALL_LOCATION}/lib )

INCLUDE_DIRECTORIES( ${JSON_INSTALL_LOCATION}/include )
LINK_DIRECTORIES( ${JSON_INSTALL_LOCATION}/lib )

ADD_SUBDIRECTORY( huntsman )
ADD_SUBDIRECTORY( runnable )

ENABLE_TESTING()
ADD_SUBDIRECTORY( tests )

